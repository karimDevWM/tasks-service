name: Deploy Images to GHCR

on:
  pull_request:  
    branches:
      - main
  push:
    branches:
      - preprod

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
    
    - name: 'Retrieve Previous Build Number'
      id: get-build-number
      run: |
        BUILD_NUMBER_FILE=".github/build_number.txt"

        if [ -f "$BUILD_NUMBER_FILE" ]; then
          BUILD_NUMBER=$(cat "$BUILD_NUMBER_FILE")
        else
          BUILD_NUMBER=0
        fi

        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV

    - name: 'Increment and Save Build Number'
      id: increment-build-number
      run: |
        NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        echo "$NEW_BUILD_NUMBER" > .github/build_number.txt

        echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

        # Commit the new build number back to the repository
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add .github/build_number.txt
        git commit -m "Increment build number to $NEW_BUILD_NUMBER" || echo "No changes to commit"
        git push https://x-access-token:${{secrets.GH_TOKEN}}@github.com/${{github.repository}}.git

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GH_TOKEN}}
    
    - name: Convert repository name to lowercase
      id: repo_name
      run: echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print tolower($2)}')" >> $GITHUB_ENV

    - name: 'Build and Push Docker Image'
      run: |
          docker build --tag ghcr.io/karimdevwm/${{env.REPO_NAME}}:${{env.NEW_BUILD_NUMBER}} .
          docker push ghcr.io/karimdevwm/${{env.REPO_NAME}}:${{env.NEW_BUILD_NUMBER}}

  deploy:
    needs: push-store-image
    name: Deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Install SSH Keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_ed25519
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

    - name: Update Docker Compose Image Tag and Restart Services
      run: |
        ssh -tt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ${{ secrets.WORK_DIR }}

          # Backup existing docker-compose.yml
          cp docker-compose.yml docker-compose.yml.bak

          # Replace the old image tag with the new one from the pipeline
          sed -i 's|ghcr.io/karimdevwm/${{env.REPO_NAME}}:[^ ]*|ghcr.io/karimdevwm/${{env.REPO_NAME}}:${{env.NEW_BUILD_NUMBER}}|' docker-compose.yml

          # Restart the services with the new image
          docker compose down
          docker compose pull
          docker compose up -d
        EOF

    - name: Cleanup
      run: rm -rf ~/.ssh